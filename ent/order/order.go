// Code generated by entc, DO NOT EDIT.

package order

import (
	"time"
)

const (
	// Label holds the string label denoting the order type in the database.
	Label = "order"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldShippingAddress holds the string denoting the shippingaddress field in the database.
	FieldShippingAddress = "shipping_address"
	// FieldPaidDate holds the string denoting the paiddate field in the database.
	FieldPaidDate = "paid_date"
	// EdgeProduct holds the string denoting the product edge name in mutations.
	EdgeProduct = "product"
	// Table holds the table name of the order in the database.
	Table = "orders"
	// ProductTable is the table that holds the product relation/edge.
	ProductTable = "orders"
	// ProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductInverseTable = "products"
	// ProductColumn is the table column denoting the product relation/edge.
	ProductColumn = "product_id"
)

// Columns holds all SQL columns for order fields.
var Columns = []string{
	FieldID,
	FieldStatus,
	FieldShippingAddress,
	FieldPaidDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "orders"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"product_id",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultPaidDate holds the default value on creation for the "PaidDate" field.
	DefaultPaidDate func() time.Time
)
